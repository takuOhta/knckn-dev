---
/**
 * astro
 */

/**
 * constants
 */

/**
 * layouts
 */
import Layout from '@layouts/Layout.astro'

/**
 * components
 */
/**
 * variables
 */
const PAGE_CLASSNAME = 'webgl'
---

<Layout title="webgl_school_004" description="" keywords="">
  <main class={`p-${PAGE_CLASSNAME}`}>
    <astro-canvas>
      <div class="canvas-wrapper"><canvas></canvas></div>
      <div class="image-container" data-giriddividedimage="container">
        <div class="inner">
          <img src="https://picsum.photos/900/900" alt="" class="bg" data-image-source="root" />
          <div class="images">
            {
              new Array(400).fill(0).map(() => (
                <div class="image-wrap">
                  <div class="image" data-giriddividedimage="image" />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </astro-canvas>
  </main>
</Layout>

<style lang="scss" is:global>
  $PAGE_CLASSNAME: 'webgl';
  .p-#{$PAGE_CLASSNAME} {
    width: 100%;
    background: #000;
  }

  .canvas-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100vh;
    z-index: 10;
    pointer-events: none;
    > canvas {
      width: 100%;
      height: 100%;
    }
  }
  .image-container {
    height: 100vh;
    padding: 40px 0px;
    .inner {
      position: relative;
    }
    .bg {
      display: block;
      width: 100%;
      height: calc(100vh - 80px);
      aspect-ratio: 1/1;
      object-fit: cover;
      opacity: 0;
      visibility: hidden;
      &.-isVisible {
        opacity: 1;
        visibility: visible;
      }
    }
    .images {
      position: absolute;
      inset: 0;
      display: grid;
      grid-template-rows: repeat(20, 1fr);
      grid-template-columns: repeat(20, 1fr);
      gap: 1px;
      width: auto;
      width: calc(100vh - 80px);
      left: 50%;
      transform: translateX(-50%);
      .image-wrap {
        position: relative;
        grid-auto-flow: dense;
        aspect-ratio: 1/1;
        width: 100%;
        height: 100%;
        .image {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }
      }
    }
  }
</style>

<script>
  // /**
  // * @description クライアントサイドで実行されるスクリプトはここに記述します。
  // */
  import { GridDividedImage } from '@scripts/pages/webgl-school/004/GridDividedImage.ts'

  // canvasタグの設定
  class AstroCanvas extends HTMLElement {
    #rootElement: HTMLElement
    #canvas: GridDividedImage
    constructor() {
      super()
      this.#rootElement = this
      this.#canvas = new GridDividedImage({ element: this.#rootElement })
    }

    /**
     * init canvas
     */
    #initCanvas() {}
  }
  customElements.define('astro-canvas', AstroCanvas)

  // data-image-source="root"に-isVisible属性を付与
  const imgElem = document.querySelector<HTMLElement>('[data-image-source="root"]')!
  // document.addEventListener('keydown', function (event) {
  //   if (event.key !== ' ') return
  //   if (imgElem.classList.contains('-isVisible')) {
  //     imgElem.classList.remove('-isVisible')
  //   } else {
  //     imgElem.classList.add('-isVisible')
  //   }
  // })
</script>
